%# my favorite books

@misc{scala-by-example,
 author = {Odersky, Martin},
 title = {Scala by Example},
 url = {https://www.scala-lang.org/docu/files/ScalaByExample.pdf},
 year = {2014},
}

@book{scala-book-by-odersky,
 author = {Odersky, Martin and Spoon, Lex and Venners, Bill},
 title = {Programming in Scala: Updated for Scala 2.12},
 year = {2016},
 isbn = {0981531687, 9780981531687},
 edition = {3rd},
 publisher = {Artima Incorporation},
 address = {USA},
}

@book{tapl,
 author = {Pierce, Benjamin C.},
 title = {Types and Programming Languages},
 year = {2002},
 isbn = {0262162091, 9780262162098},
 edition = {1st},
 publisher = {The MIT Press},
 url = {https://www.cis.upenn.edu/~bcpierce/tapl/},
}

@book{sicp,
 author = {Abelson, Harold and Sussman, Gerald J.},
 title = {Structure and Interpretation of Computer Programs},
 year = {1996},
 isbn = {0262011530},
 edition = {2nd},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
 url = {https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book.html}
}

@book{braitenberg1986vehicles,
  title={Vehicles: Experiments in Synthetic Psychology},
  author={Braitenberg, Valentino},
  isbn={9780262521123},
  lccn={84009727},
  series={Bradford Books},
  year={1986},
  publisher={MIT Press},
  note={Alan Kay suggests Robot Odyssey, rewired at \url{https://www.robotodyssey.online/}.}
}

@book{bps,
 author = {Forbus, Kenneth D. and Kleer, Johan De},
 title = {Building Problem Solvers},
 year = {1993},
 isbn = {0262560720},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
}

@book{paip,
 author = {Norvig, Peter},
 title = {Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp},
 year = {1992},
 isbn = {1558601910},
 edition = {1st},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
}

@book{art-prolog,
 author = {Sterling, Leon and Shapiro, Ehud},
 title = {The Art of Prolog (2Nd Ed.): Advanced Programming Techniques},
 year = {1994},
 isbn = {0-262-19338-8},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
}

@book{tdd,
 author = {Beck},
 title = {Test Driven Development: By Example},
 year = {2002},
 isbn = {0321146530},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@book{expertfsharp,
  title={Expert F\#},
  author={Cisternino, A. and Granicz, A. and Syme, D.},
  isbn={9781430214786},
  year={2008},
  publisher={Apress}
}

@book{cisternino2016expert,
  title={Expert F\#},
  author={Cisternino, A. and Granicz, A. and Syme, D.},
  isbn={9781484220375},
  year={2016},
  publisher={Apress}
}

@book{mk2005,
 author = {Friedman, Daniel P. and Byrd, William E. and Kiselyov, Oleg},
 title = {The Reasoned Schemer},
 year = {2005},
 isbn = {0262562146},
 publisher = {The MIT Press},
}

@book{mk,
 author = {Friedman, Daniel P. and Byrd, William E. and Kiselyov, Oleg},
 title = {The Reasoned Schemer},
 year = {2018},
 isbn = {9780262535519},
 edition = {2nd},
 publisher = {The MIT Press},
}

%# papers

%## weeks 1 and 2

@Article{Wand1998,
author="Wand, Mitchell",
title="The Theory of Fexprs is Trivial",
journal="LISP and Symbolic Computation",
year="1998",
month="May",
day="01",
volume="10",
number="3",
pages="189--199",
abstract="We provide a very simple model of a reflective facility based onthe pure $\lambda$-calculus, and we show that its theory of contextual equivalenceis trivial: two terms in the language are contextually equivalent iff theyare $\alpha$-congruent.",
issn="1573-0557",
doi="10.1023/A:1007720632734",
url="http://www.ccs.neu.edu/home/wand/papers/fexprs.ps"
}

@inproceedings{oecm,
 author = {Piumarta, Ian},
 title = {Open, Extensible Composition Models},
 booktitle = {Proceedings of the 1st International Workshop on Free Composition},
 series = {FREECO '11},
 year = {2011},
 isbn = {978-1-4503-0892-2},
 location = {Lancaster, United Kingdom},
 pages = {2:1--2:5},
 articleno = {2},
 numpages = {5},
 url = {http://piumarta.com/freeco11/freeco11-piumarta-oecm.pdf},
 doi = {10.1145/2068776.2068778},
 acmid = {2068778},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@incollection{oeom,
  title={Open, extensible object models},
  author={Piumarta, Ian and Warth, Alessandro},
  booktitle={Self-Sustaining Systems},
  pages={1--30},
  year={2008},
  publisher={Springer},
  url = {http://piumarta.com/software/cola/objmodel2.pdf}
}

@inproceedings{eval-reynolds,
 author = {Reynolds, John C.},
 title = {Definitional Interpreters for Higher-order Programming Languages},
 booktitle = {Proceedings of the ACM Annual Conference - Volume 2},
 series = {ACM '72},
 year = {1972},
 location = {Boston, Massachusetts, USA},
 pages = {717--740},
 numpages = {24},
 url = {http://homepages.inf.ed.ac.uk/wadler/papers/papers-we-love/reynolds-definitional-interpreters-1972.pdf},
 doi = {10.1145/800194.805852},
 acmid = {805852},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Applicative language, Closure, Continuation, GEDANKEN, Higher-order function, Interpreter, J-operator, LISP, Lambda calculus, Language definition, Order of application, PAL, Programming language, Reference, SECD machine},
}

@article{eval,
 author = {McCarthy, John},
 title = {Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I},
 journal = {Commun. ACM},
 issue_date = {April 1960},
 volume = {3},
 number = {4},
 month = apr,
 year = {1960},
 issn = {0001-0782},
 pages = {184--195},
 numpages = {12},
 url = {http://www-formal.stanford.edu/jmc/recursive.pdf},
 doi = {10.1145/367177.367199},
 acmid = {367199},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{lisp-history,
  title = {History of Lisp},
  author = {McCarthy, John},
  url = {http://jmc.stanford.edu/articles/lisp/lisp.pdf},
  booktitle = "History of Programming Languages",
  editor = "Richard Wexelblat",
  publisher = "Academic Press",
  year =  "1981",
}

@article{trusting-trust,
 author = {Thompson, Ken},
 title = {Reflections on Trusting Trust},
 journal = {Commun. ACM},
 issue_date = {Aug 1984},
 volume = {27},
 number = {8},
 month = aug,
 year = {1984},
 issn = {0001-0782},
 pages = {761--763},
 numpages = {3},
 url = {http://doi.acm.org/10.1145/358198.358210},
 doi = {10.1145/358198.358210},
 acmid = {358210},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{cakeml,
 author = {Kumar, Ramana and Myreen, Magnus O. and Norrish, Michael and Owens, Scott},
 title = {CakeML: A Verified Implementation of ML},
 booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '14},
 year = {2014},
 isbn = {978-1-4503-2544-8},
 location = {San Diego, California, USA},
 pages = {179--191},
 numpages = {13},
 url = {https://cakeml.org/popl14.pdf},
 doi = {10.1145/2535838.2535841},
 acmid = {2535841},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {ML, compiler bootstrapping, compiler verification, machine code verification, read-eval-print loop, verified garbage collection., verified parsing, verified type checking},
}

@phdthesis{cakeml-thesis,
 title={Self-compilation and self-verification},
 url={http://www.sigplan.org/Awards/Dissertation/2017_kumar.pdf},
 author={Ramana Kumar},
 year={2016},
 school={University of Cambridge, Compter Laboratory}
}

%## prolog

@misc{ferguson,
 year = "1981",
 url = {http://tinlizzie.org/~awarth/prolog-ferguson81.pdf},
 title = {PROLOG: A Step Towards the Ultimate Computer Language},
 author = {Ferguson, Ron},
}


%## abstract interpretation

@inproceedings{meta_circ_prolog,
   author = {Michael Codish and Harald Sondergaard},
   title = {Meta-circular abstract interpretation in Prolog},
   booktitle = {The Essence of Computation: Complexity, Analysis, Transformation},
   editor = {Torben Mogensen, David Schmidt and I. Hal Sudburough},
   series = {Lecture Notes in Computer Science},
   volume = {2566},
   year = {2002},
   pages = {109--134},
   publisher = {Springer-Verlag},
   url = {https://www.cs.bgu.ac.il/~mcodish/Tutorial/}
}

@article{darais,
 author = {Darais, David and Labich, Nicholas and Nguyen, Ph\'{u}c C. and Van Horn, David},
 title = {Abstracting Definitional Interpreters (Functional Pearl)},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {September 2017},
 volume = {1},
 number = {ICFP},
 month = aug,
 year = {2017},
 issn = {2475-1421},
 pages = {12:1--12:25},
 articleno = {12},
 numpages = {25},
 url = {https://plum-umd.github.io/abstracting-definitional-interpreters/},
 doi = {10.1145/3110256},
 acmid = {3110256},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract interpreters, interpreters},
}

%## relational programming

@article{mk-icfp,
 author = {Byrd, William E. and Ballantyne, Michael and Rosenblatt, Gregory and Might, Matthew},
 title = {A Unified Approach to Solving Seven Programming Problems (Functional Pearl)},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {September 2017},
 volume = {1},
 number = {ICFP},
 month = aug,
 year = {2017},
 issn = {2475-1421},
 pages = {8:1--8:26},
 articleno = {8},
 numpages = {26},
 url = {http://io.livecode.ch/learn/gregr/icfp2017-artifact-auas7pp},
 doi = {10.1145/3110252},
 acmid = {3110252},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Racket, Scheme, miniKanren, program synthesis, relational programming},
}

%## meta-object protocols

@misc{Kiczales93metaobjectprotocols,
  author = {Gregor Kiczales and J. Michael Ashley and Luis Rodriguez and Amin Vahdat and Daniel G. Bobrow},
  title = {Metaobject protocols: Why we want them and what else they can do},
  year = {1993},
  url = {http://cseweb.ucsd.edu/~vahdat/papers/mop.pdf}
}

@book{smalltalk-72,
  title={Smalltalk-72: Instruction Manual},
  author={Goldberg, Adele and Kay, Alan},
  year={1976},
  url={http://bitsavers.informatik.uni-stuttgart.de/pdf/xerox/parc/techReports/Smalltalk-72_Instruction_Manual_Mar76.pdf},
  publisher={{XEROX} Parc}
}

@book{smalltalk-80,
 author = {Goldberg, Adele and Robson, David},
 title = {Smalltalk-80: The Language and Its Implementation},
 year = {1983},
 isbn = {0-201-11371-6},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
 url={http://stephane.ducasse.free.fr/FreeBooks/BlueBook/Bluebook.pdf}
}

@inproceedings{bracha-mirrors,
 author = {Bracha, Gilad and Ungar, David},
 title = {Mirrors: Design Principles for Meta-level Facilities of Object-oriented Programming Languages},
 booktitle = {Proceedings of the 19th Annual ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA '04},
 year = {2004},
 isbn = {1-58113-831-8},
 location = {Vancouver, BC, Canada},
 pages = {331--344},
 numpages = {14},
 url = {http://bracha.org/mirrors.pdf},
 doi = {10.1145/1028976.1029004},
 acmid = {1029004},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {java, metaprogramming, mirrors, reflection, self, smalltalk},
}

%## reflective towers of interpreters

@inproceedings{smith-lisp,
 author = {Smith, Brian Cantwell},
 title = {Reflection and Semantics in LISP},
 booktitle = {Proceedings of the 11th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL '84},
 year = {1984},
 isbn = {0-89791-125-3},
 location = {Salt Lake City, Utah, USA},
 pages = {23--35},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/800017.800513},
 doi = {10.1145/800017.800513},
 acmid = {800513},
 publisher = {ACM},
 address = {New York, NY, USA},
}

% brown
@inproceedings{brown,
 author = {Wand, Mitchell and Friedman, Daniel P.},
 title = {The Mystery of the Tower Revealed: A Non-reflective Description of the Reflective Tower},
 booktitle = {Proceedings of the 1986 ACM Conference on LISP and Functional Programming},
 series = {LFP '86},
 year = {1986},
 isbn = {0-89791-200-4},
 location = {Cambridge, Massachusetts, USA},
 pages = {298--307},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/319838.319871},
 doi = {10.1145/319838.319871},
 acmid = {319871},
 publisher = {ACM},
 address = {New York, NY, USA},
}

% blond
@inproceedings{blond,
 author = {Danvy, Olivier and Malmkjaer, Karoline},
 title = {Intensions and Extensions in a Reflective Tower},
 booktitle = {Proceedings of the 1988 ACM Conference on LISP and Functional Programming},
 series = {LFP '88},
 year = {1988},
 isbn = {0-89791-273-X},
 location = {Snowbird, Utah, USA},
 pages = {327--341},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/62678.62725},
 doi = {10.1145/62678.62725},
 acmid = {62725},
 publisher = {ACM},
 address = {New York, NY, USA},
}

% black
@Article{black,
author="Asai, Kenichi
and Matsuoka, Satoshi
and Yonezawa, Akinori",
title="Duplication and partial evaluation",
journal="LISP and Symbolic Computation",
year="1996",
month="May",
day="01",
volume="9",
number="2",
pages="203--241",
abstract="This paper presents a general implementation framework for reflective languages. It allows us to systematically build reflective languages which have the following favorable properties: (1) user programs are allowed to access and change (parts of) metalevel interpreters, (2) reflective facilities are available at every level, (hence there exists conceptually an infinite tower of interpreters), and (3) the interpreter runs as efficiently as the conventional (directly implemented) metacircular interpreter when reflection is not used. Our scheme is divided into three stages. First, we define interpreters which give the operational semantics of each level, and conceptually construct the infinite tower of these interpreters. They are thenduplicated to obtain directly executed interpreters, while introducing double interpretation to maintain redefinability of interpreters. Finally, partial evaluation is employed to collapse the double interpretation into single interpretation. We illustrate our scheme by implementing a particular reflective language calledBlack in Scheme, but it is general enough to be applied to other reflective languages. The paper gives the complete Scheme implementation of Black and demonstrates some examples. We also show how a system with the delta abstraction introduced by Blond can be constructed in our framework.",
issn="1573-0557",
doi="10.1007/BF01806113",
url="https://github.com/readevalprintlove/black"
}


@inproceedings{black-gpce,
 author = {Asai, Kenichi},
 title = {Compiling a Reflective Language Using MetaOCaml},
 booktitle = {Proceedings of the 2014 International Conference on Generative Programming: Concepts and Experiences},
 series = {GPCE 2014},
 year = {2014},
 isbn = {978-1-4503-3161-6},
 location = {V\&\#228;ster\&\#229;s, Sweden},
 pages = {113--122},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2658761.2658775},
 doi = {10.1145/2658761.2658775},
 acmid = {2658775},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {MetaOCaml, Reflection, binding-time analysis, metacircular interpreter, partial evaluation, staging},
}

% pink and purple
@article{collapsing-towers,
 author = {Amin, Nada and Rompf, Tiark},
 title = {Collapsing Towers of Interpreters},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {January 2018},
 volume = {2},
 number = {POPL},
 month = dec,
 year = {2017},
 issn = {2475-1421},
 pages = {52:1--52:33},
 articleno = {52},
 numpages = {33},
 url = {http://popl18.namin.net},
 doi = {10.1145/3158140},
 acmid = {3158140},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Lisp, Scala, compiler, interpreter, reflection, staging},
}

%## monadic reflection

@inproceedings{sobel,
  title = {An introduction to reflection-oriented programming},
  author = {Sobel, Jonathan M and Friedman, Daniel P},
  url = {http://www2.parc.com/csl/groups/sda/projects/reflection96/docs/sobel/sobel.pdf},
  booktitle = {Reflection},
  year = {1996},
}

@ARTICLE{meta-fstar,
   author = {{Mart{\'{\i}}nez}, G. and {Ahman}, D. and {Dumitrescu}, V. and
	{Giannarakis}, N. and {Hawblitzel}, C. and {Hritcu}, C. and
	{Narasimhamurthy}, M. and {Paraskevopoulou}, Z. and {Pit-Claudel}, C. and
	{Protzenko}, J. and {Ramananandro}, T. and {Rastogi}, A. and
	{Swamy}, N.},
    title = "{Meta-F*: Proof Automation with SMT, Tactics, and Metaprograms}",
  journal = {ArXiv e-prints},
archivePrefix = "arXiv",
   eprint = {1803.06547},
 primaryClass = "cs.PL",
 keywords = {Computer Science - Programming Languages, Computer Science - Logic in Computer Science},
     year = 2018,
    month = mar,
   adsurl = {http://adsabs.harvard.edu/abs/2018arXiv180306547M},
  adsnote = {Provided by the SAO/NASA Astrophysics Data System},
  url = {https://arxiv.org/abs/1803.06547},
}

@Inbook{coq-reflection,
author="Bertot, Yves
and Cast{\'e}ran, Pierre",
title="* Proof by Reflection",
bookTitle="Interactive Theorem Proving and Program Development: Coq'Art: The Calculus of Inductive Constructions",
year="2004",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="433--448",
abstract="Proof by reflection is a characteristic feature of proving in type theory. There is a programming language embedded inside the logical language and it can be used to describe decision procedures or systematic reasoning methods. We already know that programming in Coq is a costly task and this approach is only worth the effort because the proof process is made much more efficient. In some cases, dozens of rewrite operations can be replaced with a few theorem applications and a convertibility test of the Calculus of Inductive Constructions. Since the computations of this programming language do not appear in the proof terms, we obtain proofs that are smaller and often quicker to check.",
isbn="978-3-662-07964-5",
doi="10.1007/978-3-662-07964-5_16",
url="https://doi.org/10.1007/978-3-662-07964-5_16"
}

@inbook{coq-reflection2,
 author = {Chlipala, Adam},
 chapter = {15. Proof by Reflection},
 title = {Certified Programming with Dependent Types: A Pragmatic Introduction to the Coq Proof Assistant},
 year = {2013},
 isbn = {0262026651, 9780262026659},
 publisher = {The MIT Press},
 url = {http://adam.chlipala.net/cpdt/html/Cpdt.Reflection.html}
}

@misc{agda-reflection,
  title={A very simple theorem prover, using the technique of proof by reflection},
  author={Nils Anders Danielsson},
  year={2013},
  url={http://www.cse.chalmers.se/edu/year/2013/course/afp/lectures/lecture12/html/Proof-by-reflection.html},
}

@inbook{agda-stump,
 author = {Stump, Aaron},
 chapter = {6.3 Proof by Reflection},
 title = {Verified Functional Programming in Agda},
 year = {2016},
 isbn = {978-1-97000-127-3},
 publisher = {Association for Computing Machinery and Morgan \&\#38; Claypool},
 address = {New York, NY, USA},
}

@inproceedings{agda-reflection-eng,
  TITLE = {{Engineering Proof by Reflection in Agda}},
  AUTHOR = {van der Walt, Paul and Swierstra, Wouter},
  URL = {https://hal.inria.fr/hal-00987610},
  BOOKTITLE = {{IFL - 24th International Symposium on Implementation and Application of Functional Languages}},
  ADDRESS = {Oxford, United Kingdom},
  EDITOR = {Ralf Hinze},
  PUBLISHER = {{Springer}},
  SERIES = {Lecture Notes in Computer Science},
  VOLUME = {8241},
  PAGES = {157-173},
  YEAR = {2012},
  MONTH = Aug,
  DOI = {10.1007/978-3-642-41582-1\_10},
  PDF = {https://hal.inria.fr/hal-00987610/file/ReflectionProofs.pdf},
  HAL_ID = {hal-00987610},
  HAL_VERSION = {v1},
}

@inproceedings{hol-reflection,
  title={Proof-producing reflection for HOL},
  author={Fallenstein, Benja and Kumar, Ramana},
  booktitle={International Conference on Interactive Theorem Proving},
  pages={170--186},
  year={2015},
  organization={Springer},
  url={https://cakeml.org/itp15-reflection.pdf}
}

@TECHREPORT{harrison-reflection,
  author = "John Harrison",
  title = "Metatheory and Reflection in Theorem Proving: A Survey and Critique",
  institution = "SRI Cambridge",
  address = "Millers Yard, Cambridge, UK",
  year = 1995,
  type = "Technical Report",
  number = "CRC-053",
  url = {http://www.cl.cam.ac.uk/~jrh13/papers/reflect.pdf}
}

@phdthesis{fisher1970control,
  title={Control structures for programming languages},
  author={Fisher, David A},
  year={1970},
  school={{CMU}},
  misc={http://reports-archive.adm.cs.cmu.edu/anon/anon/home/ftp/scan/CMU-CS-70-fisher.pdf}
}

%## surveys

@INPROCEEDINGS{malenfant,
    author = {François-Nicola Demers and Jacques Malenfant},
    title = {Reflection in logic, functional and object-oriented programming: a Short Comparative Study},
    booktitle = {In IJCAI '95 Workshop on Reflection and Metalevel Architectures and their Applications in AI},
    year = {1995},
    pages = {29--38}
}

@misc{tanter,
 author = {Eric Tanter},
 title = {Reflection and Open Implementations},
 url = {https://www.dcc.uchile.cl/TR/2009/TR_DCC-20091123-013.pdf},
 year = {2009},
}

%## weeks 3 and 4

@book{pebook,
 author = {Jones, Neil D. and Gomard, Carsten K. and Sestoft, Peter},
 title = {Partial Evaluation and Automatic Program Generation},
 year = {1993},
 isbn = {0-13-020249-5},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
 url = {https://www.itu.dk/~sestoft/pebook/jonesgomardsestoft-letter.pdf},
}

@article{Futamura:1999,
 author = {Futamura, Yoshihiko},
 title = {Partial Evaluation of Computation Process, Revisited},
 journal = {Higher Order Symbol. Comput.},
 issue_date = {December 1999},
 volume = {12},
 number = {4},
 month = dec,
 year = {1999},
 issn = {1388-3690},
 pages = {377--380},
 numpages = {4},
 url = {https://doi.org/10.1023/A:1010043619517},
 doi = {10.1023/A:1010043619517},
 acmid = {609204},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
}

@article{Futamura:1971,
 author = {Futamura, Yoshihiko},
 title = {Partial evaluation of computation process--an approach to a compiler-compiler},
 journal = {Systems Computers Controls},
 issue_date = {1971},
 volume = {2},
 number = {5},
 year = {1971},
 numpages = {5},
}

@INPROCEEDINGS{selfpe, 
author={N. D. Jones and C. K. Gomard and A. Bondorf and O. Danvy and T. A. Mogensen}, 
booktitle={Proceedings. 1990 International Conference on Computer Languages}, 
title={A self-applicable partial evaluator for the lambda calculus}, 
year={1990}, 
volume={}, 
number={}, 
pages={49-58}, 
keywords={functional programming;high level languages;program compilers;self-applicable partial evaluator;lambda calculus;constants;conditionals;fixed point operator;time analysis;side-effect free subset;Scheme;compiler generator;Calculus;Program processors;Bonding;Computer science;Computer languages;Assembly;Displays}, 
doi={10.1109/ICCL.1990.63760}, 
ISSN={}, 
month={March},}

@article{cook2011tutorial,
  title={Tutorial on online partial evaluation},
  author={Cook, William R and L{\"a}mmel, Ralf},
  journal={arXiv preprint arXiv:1109.0781},
  year={2011},
  url={http://www.cs.utexas.edu/~wcook/tutorial/}
}

@article{lms,
 author = {Rompf, Tiark and Odersky, Martin},
 title = {Lightweight Modular Staging: A Pragmatic Approach to Runtime Code Generation and Compiled DSLs},
 journal = {Commun. ACM},
 issue_date = {June 2012},
 volume = {55},
 number = {6},
 month = jun,
 year = {2012},
 issn = {0001-0782},
 pages = {121--130},
 numpages = {10},
 url = {http://scala-lms.github.io},
 doi = {10.1145/2184319.2184345},
 acmid = {2184345},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{query-pearl,
 author = {Rompf, Tiark and Amin, Nada},
 title = {Functional Pearl: A SQL to C Compiler in 500 Lines of Code},
 booktitle = {Proceedings of the 20th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP 2015},
 year = {2015},
 isbn = {978-1-4503-3669-7},
 location = {Vancouver, BC, Canada},
 pages = {2--9},
 numpages = {8},
 url = {https://www.cs.purdue.edu/homes/rompf/papers/rompf-icfp15.pdf},
 doi = {10.1145/2784731.2784760},
 acmid = {2784760},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Futamura Projections, Generative Programming, Query Compilation, SQL, Staging},
}

@article{oleg-tutorial,
url = {http://okmij.org/ftp/meta-programming/tutorial/},
year = {2018},
volume = {5},
journal = {Foundations and Trends® in Programming Languages},
title = {Reconciling Abstraction with High Performance: A MetaOCaml approach},
doi = {10.1561/2500000038},
issn = {2325-1107},
number = {1},
pages = {1-101},
author = {Oleg Kiselyov}
}

@inproceedings{lms-verify,
  author    = {Nada Amin and
               Tiark Rompf},
  title     = {LMS-Verify: abstraction without regret for verified systems programming},
  booktitle = {Proceedings of the 44th {ACM} {SIGPLAN} Symposium on Principles of
               Programming Languages, {POPL} 2017, Paris, France, January 18-20,
               2017},
  pages     = {859--873},
  year      = {2017},
  url       = {http://github.com/namin/lms-verify},
}

%## logic programming

@inproceedings{seres,
  title={Embedding Prolog in Haskell},
  booktitle={Haskell},
  author={Spivey, J Michael and Seres, Silvija},
  url = {http://www.silvija.net/0000OxfordPublications/seres_haskell99.pdf},
  year={1999}
}

@inproceedings{miniKanren,
  booktitle={Scheme Workshop},
  title={miniKanren, live and untagged},
  author={Byrd, William E and Holk, Eric and Friedman, Daniel P},
  year={2012},
  url = {http://webyrd.net/quines/quines.pdf}
}

@inproceedings{microKanren,
 author = {Hemann, Jason and Friedman, Daniel P.},
 title = {µKanren: A Minimal Functional Core for Relational Programming},
 booktitle = {Scheme Workshop},
 year = {2013},
 url = {http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf},
 keywords = {Racket, logic programming, microKanren, miniKanren, relational programming, search, streams},
}

%## probabilistic programming

@inproceedings{ramsey,
 author = {Ramsey, Norman and Pfeffer, Avi},
 title = {Stochastic Lambda Calculus and Monads of Probability Distributions},
 booktitle = {Proceedings of the 29th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '02},
 year = {2002},
 isbn = {1-58113-450-9},
 location = {Portland, Oregon},
 pages = {154--165},
 numpages = {12},
 url = {https://www.cs.tufts.edu/~nr/pubs/pmonad.pdf},
 doi = {10.1145/503272.503288},
 acmid = {503288},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@InProceedings{hansei,
url = {http://okmij.org/ftp/kakuritu/Hansei.html},
author="Kiselyov, Oleg
and Shan, Chung-chieh",
editor="Taha, Walid Mohamed",
title="Embedded Probabilistic Programming",
booktitle="Domain-Specific Languages",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="360--384",
abstract="Two general techniques for implementing a domain-specific language (DSL) with less overhead are the finally-tagless embedding of object programs and the direct-style representation of side effects. We use these techniques to build a DSL for probabilistic programming, for expressing countable probabilistic models and performing exact inference and importance sampling on them. Our language is embedded as an ordinary OCaml library and represents probability distributions as ordinary OCaml programs. We use delimited continuations to reify probabilistic programs as lazy search trees, which inference algorithms may traverse without imposing any interpretive overhead on deterministic parts of a model. We thus take advantage of the existing OCaml implementation to achieve competitive performance and ease of use. Inference algorithms can easily be embedded in probabilistic programs themselves.",
isbn="978-3-642-03034-5"

}

%## image processing

@inproceedings{halide,
 author = {Ragan-Kelley, Jonathan and Barnes, Connelly and Adams, Andrew and Paris, Sylvain and Durand, Fr{\'e}do and Amarasinghe, Saman},
 title = {Halide: A Language and Compiler for Optimizing Parallelism, Locality, and Recomputation in Image Processing Pipelines},
 booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '13},
 year = {2013},
 isbn = {978-1-4503-2014-6},
 location = {Seattle, Washington, USA},
 pages = {519--530},
 numpages = {12},
 url = {http://people.csail.mit.edu/jrk/halide-pldi13.pdf},
 doi = {10.1145/2491956.2462176},
 acmid = {2462176},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {autotuning, compiler, domain specific language, gpu, image processing, locality, optimization, parallelism, redundant computation, vectorization},
}

@InCollection{pan-fun,
  author       = {Conal Elliott},
  title        = {Functional Images},
  url          = {http://conal.net/papers/functional-images/},
  booktitle    = {The Fun of Programming},
  publisher    = {Palgrave},
  year         = 2003,
  series       = {``Cornerstones of Computing'' series},
  month        = mar
}

@Article{pan-compile,
  author       = {Conal Elliott and Sigbj\o{}rn Finne and Oege de Moor},
  title        = {Compiling Embedded Languages},
  url          = {http://conal.net/papers/jfp-saig/},
  journal      = {Journal of Functional Programming},
  year         = 2003,
  volume       = 13,
  number       = 2,
  note         = {Updated version of paper by the same name that appeared in SAIG '00 proceedings.}
}

@article{composing-fractals,
  title={FUNCTIONAL PEARL Composing fractals},
  volume={14},
  DOI={10.1017/S0956796804005167},
  number={6},
  journal={Journal of Functional Programming},
  publisher={Cambridge University Press},
  author={Jones, Mark P.},
  year={2004},
  pages={715–725},
  url={http://web.cecs.pdx.edu/~mpj/pubs/composing-fractals.pdf},
}

%## parsing / syntax malleability

@phdthesis{ometa,
 title = {Experimenting with Programming Languages},
 url = {http://www.vpri.org/pdf/tr2008003_experimenting.pdf},
 author = {Warth, Alessandro},
 year = {2018},
 school={{UCLA}},
}

@misc{meta2,
  title = {Meta {II}: a Syntax-Oriented Compiler Writing Language},
  author = {Schorre, D. V.},
  url = {http://www.ibm-1401.info/Meta-II-schorre.pdf},
  year = {1964},
}

@article{imp,
 author = {Irons, Edgar T.},
 title = {Experience with an Extensible Language},
 journal = {Commun. ACM},
 issue_date = {Jan. 1970},
 volume = {13},
 number = {1},
 month = jan,
 year = {1970},
 issn = {0001-0782},
 pages = {31--40},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/361953.361966},
 doi = {10.1145/361953.361966},
 acmid = {361966},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {ambiguity, bootstrapping, compiler, extensible, programming languages},
} 

@article{testerlisp70,
  title={THE LISP70 PATTERN MATCHING SYSTEM},
  author={Tester, Lawrence G and Enea, Horace J and Smith, David C},
  url = {https://www.ijcai.org/Proceedings/73/Papers/073.pdf},
  journal={Proceedings of the Third International Joint Conference on Artificial Intelligence},
  year={1973}
}

%## self-hosting

@misc{ichbins,
  title={ICHBINS: a self-hosting compiler of a Lisp dialect to C in 6 pages of
code},
  author={Darius Bacon},
  year={2007},
  url={https://github.com/darius/ichbins}}

@misc{maru,
  title={Maru: a symbolic expression evaluator that can compile its own implementation language},
  author={Ian Piumarta},
  year={2011},
  url={http://piumarta.com/software/maru/}
}

%## weeks 5

%TODO: read
@article{synthesis-review,
 author = {Gulwani, Sumit and Hern\'{a}ndez-Orallo, Jos{\'e} and Kitzelmann, Emanuel and Muggleton, Stephen H. and Schmid, Ute and Zorn, Benjamin},
 title = {Inductive Programming Meets the Real World},
 journal = {Commun. ACM},
 issue_date = {November 2015},
 volume = {58},
 number = {11},
 month = oct,
 year = {2015},
 issn = {0001-0782},
 pages = {90--99},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2736282},
 doi = {10.1145/2736282},
 acmid = {2736282},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@phdthesis{sketching,
 author = {Solar-Lezama, Armando},
 advisor = {Bodik, Rastislav},
 title = {Program Synthesis by Sketching},
 year = {2008},
 isbn = {978-1-109-09745-0},
 note = {AAI3353225},
 school = {University of California at Berkeley},
 publisher = {University of California at Berkeley},
 address = {Berkeley, CA, USA},
 url = {https://people.csail.mit.edu/asolar/papers/thesis.pdf},
}

% TODO: read
@inproceedings{osera,
 author = {Osera, Peter-Michael and Zdancewic, Steve},
 title = {Type-and-example-directed Program Synthesis},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {619--630},
 numpages = {12},
 url = {https://www.cis.upenn.edu/~stevez/papers/OZ15.pdf},
 doi = {10.1145/2737924.2738007},
 acmid = {2738007},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Functional Programming, Program Syn- thesis, Proof Search, Type Theory},
}


%## weeks 6

@article{diffForth,
  title={Programming with a differentiable forth interpreter},
  author={Bo{\v{s}}njak, Matko and Rockt{\"a}schel, Tim and Naradowsky, Jason and Riedel, Sebastian},
  journal={arXiv preprint arXiv:1605.06640},
  year={2016},
  url={https://github.com/uclmr/d4}
}

@article{diffILP,
  title={Learning explanatory rules from noisy data},
  author={Evans, Richard and Grefenstette, Edward},
  journal={Journal of Artificial Intelligence Research},
  volume={61},
  pages={1--64},
  year={2018}
}

@inproceedings{janus,
 author = {Yokoyama, Tetsuo and Gl\"{u}ck, Robert},
 title = {A Reversible Programming Language and Its Invertible Self-interpreter},
 booktitle = {Proceedings of the 2007 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-based Program Manipulation},
 series = {PEPM '07},
 year = {2007},
 isbn = {978-1-59593-620-2},
 location = {Nice, France},
 pages = {144--153},
 numpages = {10},
 url = {https://topps.diku.dk/pirc/janus-playground/},
 doi = {10.1145/1244381.1244404},
 acmid = {1244404},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Janus, non-standard interpreter hierarchy, program inversion, reversible computing, reversible programming language, self-interpreter},
}

@inproceedings{metaconnaissances,
  url = {https://www.persee.fr/doc/quad_0987-1381_1995_num_25_1_1110},
  title = {Des m\'etaconnaissances pour des sys\`emes intelligents},
  author = {Jacques Pitrat},
  year = {1995},
  pages = {29--42},
  booktitle = {Quaderni},
  volume = {25}
}

%# todo: read!

@inproceedings{liedtke1993persistent,
  title={A persistent system in real use-experiences of the first 13 years},
  author={Liedtke, Jochen},
  booktitle={Object Orientation in Operating Systems, 1993., Proceedings of the Third International Workshop on},
  pages={2--11},
  year={1993},
  organization={IEEE}
}
